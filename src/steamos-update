#!/bin/bash
# HoloISO updater
# Built with blackjack honestly and random other bullshit stuff i couldn't really care about
# I'm impressed that this does even work. Like literally.

# Stupid hack for OOBE to skip to login screen directly
if [[ -e "/etc/holoiso-oobe" ]]; then
     exit 7
else

# Elevate ourselves or idk
if [[ $EUID -ne 0 ]];
then
    exec pkexec --disable-internal-agent "$0" "$@"
fi

# Random variables we don't really care about
info() { echo >&2 "$*"; }
BRANCH_LOCAL=$(cat /etc/holoiso-branch)

# Check for available OS updates.
updatecheck() {
    # Update and add latest pacman config ## PLACEHOLDER ## ##TODO: We're elevated anyway. Can't we just check for config version?##
    wget -q https://raw.githubusercontent.com/theVakhovskeIsTaken/holoiso_install_main/${BRANCH_LOCAL}/src/pacman.conf -O /tmp/cached_pacman.conf
    if [[ -f "/tmp/cached_pacman.conf" ]]; then
        if [[ "$(cat /tmp/cached_pacman.conf | grep CONFIG_VERSION | cut -d "=" -f 2 | sed 's|["'\'']||g')" -ge "$(cat /etc/pacman.conf | grep CONFIG_VERSION | cut -d "=" -f 2 | sed 's|["'\'']||g')" ]]; then
            rm /etc/pacman.conf
            mv /tmp/cached_pacman.conf /etc/pacman.conf
        fi
    fi
    # Update pacman dbs
    pacman -Sy | grep -i "quiet"
        # Here we check for package reqs
        HOLOISO_MAIN_SNAPSHOT_HAS_UPDATE=$(pacman -Qqu holoiso-main $(pacman -Si holoiso-main | grep Depends | cut -d ':' -f 2 | sed 's/jupiter-hw-support//g'))
        HOLOISO_DEPENDENCY_UPDATE_LIST=$(pacman -Qqu $(pacman -Si holoiso-main | grep Depends | cut -d ':' -f 2 | sed 's/jupiter-hw-support//g'))
        IS_LARGE_UPDATE=$(pacman -Qqu | wc -l)
        if [ -n "${HOLOISO_MAIN_SNAPSHOT_HAS_UPDATE}" ]; then
            info "Update available"
            echo "$(pacman -Si holoiso-main | grep Description | cut -d ":" -f 2)"
            if [ -n "${HOLOISO_DEPENDENCY_UPDATE_LIST}" ]; then
		        echo "| following dependencies will be updated: ${HOLOISO_DEPENDENCY_UPDATE_LIST}"
            fi
            if [ "${IS_LARGE_UPDATE}" -ge "100" ]; then
			    echo "and ${IS_LARGE_UPDATE} more packages are ready to update."
		    fi
                touch /tmp/steamos-updatepersist-sentinel
                exit 0
        else
            info "No update available"
            exit 7
        fi
}

## TODO:
## Check what Steam client actually calls on "Apply update" press
## What it does now, is what I call a lazy thing, called "I'll run the same thing, but since i wrote the sentinel it'll update anyway!"

# Check for sentinel. Sentinel detected = Update time!
export STEAMOS_UPDATE_SENTINEL="/tmp/steamos-updatepersist-sentinel"
if [[ -e "$STEAMOS_UPDATE_SENTINEL" ]]; then
    rm -f "$STEAMOS_UPDATE_SENTINEL"
    pacman -Su --noconfirm --overwrite="*" holoiso-main
    echo "Update complete. Restart your device to finish."
fi

## To be fixed
## Maybe....

if [ -n "$1" ]; then
    case "$1" in
    check)
	    updatecheck
        ;;
    '')
	    updatenow
        ;;
    esac
    shift
fi
fi
